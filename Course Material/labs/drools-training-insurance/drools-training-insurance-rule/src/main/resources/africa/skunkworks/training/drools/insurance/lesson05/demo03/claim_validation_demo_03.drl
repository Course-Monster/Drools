package africa.skunkworks.training.drools.insurance.lesson05.demo03;

import africa.skunkworks.training.drools.insurance.domain.dto.ClaimDto;
import africa.skunkworks.training.drools.insurance.domain.dto.PolicyDto;
import africa.skunkworks.training.drools.insurance.domain.enums.Status
import africa.skunkworks.training.drools.insurance.domain.dto.Payout;
import africa.skunkworks.training.drools.insurance.domain.dto.InvalidClaim;
import africa.skunkworks.training.drools.insurance.domain.dto.ValidClaim;
import africa.skunkworks.training.drools.insurance.domain.dto.InvalidPolicy;

dialect  "java"

rule "Valid Claims"
    agenda-group "valid-claims"
    when
        $claim: ClaimDto( )
        not (InvalidClaim( claim == $claim) )
    then
        modify($claim){
            setReason($claim + ": not invalidated. Approval Granted")
        }
        insertLogical( new ValidClaim($claim) );
end

rule "Invalidate claim without matching policy"
    agenda-group "invalid-policy"
    when
        $claim: ClaimDto( )
        not PolicyDto( policyNumber == $claim.getPolicyNumber() )
        not InvalidClaim( $claim.policyNumber == $claim.policyNumber)
    then
        modify($claim){
            setReason($claim + ": failed (no matching policy)")
        }
        insert( new InvalidClaim($claim) );
end

rule "Invalidate claim that exceeds coverage"
    agenda-group "exceed-coverage"
    when
        $claim: ClaimDto( )
        $policy: PolicyDto( policyNumber == $claim.getPolicyNumber(), coverage < $claim.getClaimAmount() )
        not InvalidClaim( $claim.policyNumber == $claim.policyNumber)
    then
        modify($claim){
            setReason($claim + ": failed. Coverage in policy " + $policy + " insufficient.")
        }
        insert( new InvalidClaim($claim) );
end

rule "Invalidate claim with invalid policy"
    agenda-group "unpaid-premiums"
    when
        $invalidPolicy: InvalidPolicy( )
        $claim: ClaimDto( policyNumber == $invalidPolicy.policy.policyNumber )
        not InvalidClaim( $claim.policyNumber == $claim.policyNumber)
    then
        modify($claim){
            setReason($claim + ": failed. " + $invalidPolicy + " Invalid")
        }
        insert( new InvalidClaim($claim) );
end